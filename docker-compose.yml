version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: saas-calculator-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-saascalc}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-saascalc123}
      POSTGRES_DB: ${DB_NAME:-saas_calculator}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-saascalc}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: saas-calculator-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saas-calculator-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${DB_USER:-saascalc}:${DB_PASSWORD:-saascalc123}@postgres:5432/${DB_NAME:-saas_calculator}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      STRIPE_PROFESSIONAL_PRICE_ID: ${STRIPE_PROFESSIONAL_PRICE_ID}
      STRIPE_ENTERPRISE_PRICE_ID: ${STRIPE_ENTERPRISE_PRICE_ID}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:5173}
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npm run start:prod
      "

  nginx:
    image: nginx:alpine
    container_name: saas-calculator-nginx
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: